// src/app.js

const express = require('express');
const db = require('../models');

// 1. ImportaÃ§Ã£o das rotas que vamos usar
const authRoutes = require('../routes/authRoutes');
const restauranteRoutes = require('../routes/restauranteRoutes')
// const restauranteRoutes = require('./routes/restauranteRoutes'); // Exemplo para quando for criar

const app = express();

// 2. ConfiguraÃ§Ã£o de Middlewares (continua igual)
app.use(express.json());

// 3. ConexÃ£o das Rotas
// Aqui dizemos ao Express: "Toda requisiÃ§Ã£o que comeÃ§ar com '/auth', 
// deve ser gerenciada pelo nosso 'authRoutes'".
app.use('/auth', authRoutes);
app.use('/restaurante',restauranteRoutes)
// app.use('/restaurantes', restauranteRoutes); // Exemplo para quando for criar

// Rota principal para um teste rÃ¡pido de saÃºde da API
app.get('/', (req, res) => {
    res.send('API de Delivery de Comida estÃ¡ no ar! ðŸš€');
});


// Sincroniza o banco de dados ao iniciar
db.sequelize.sync().then(() => {
    console.log('Modelos sincronizados com o banco de dados. Tabelas prontas! ðŸ”„');
});


// 4. ExportaÃ§Ã£o (continua igual)
module.exports = app;